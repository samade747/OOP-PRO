# âœ… Example 1: Bank Account
# ðŸ”’ Encapsulating balance to protect it from direct access

class BankAccount:
    def __init__(self):
        self.__balance = 0 # Private variable

    def deposit(self, amount):
        if amount > 0:
            self.__balance += amount # Modifying private variable


    def get_balance(self):
        return self.__balance # Getter Method
    

account = BankAccount()
account.deposit(1000)
print(account.get_balance())  # âœ… Output: 1000
# ðŸ§  Why encapsulation? We donâ€™t want anyone to directly change __balance to a negative number.

